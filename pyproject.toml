[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "zomato_prediction"
version = "1.0.0"
description = "Enterprise-grade restaurant rating prediction system with advanced ML and data engineering. Uses battle-tested newAge environment with 600+ dependencies for guaranteed compatibility."
authors = [
  { name = "Puneet Kumar Mishra" },
]
license = { file = "LICENSE" }
readme = "README.md"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules"
]
requires-python = ">=3.10,<3.12"

# Note: This project uses the newAge conda environment for dependency management
# The environment.yml file contains the complete, battle-tested dependency set
# requirements_conda.txt contains the full 639-package conda list export
# requirements.txt contains only pip packages (incomplete)
# 
# To install dependencies (RECOMMENDED):
# conda env create -f environment.yml
# conda activate newAge
#
# Alternative (from conda list):
# conda create -n newAge
# conda install --file requirements_conda.txt
#
# The dependencies listed below are for reference only - use the conda environment!

dependencies = [
    "# IMPORTANT: Use 'conda env create -f environment.yml' instead",
    "# This project requires the complete newAge environment to function properly",
    "# The dependencies are too complex for simple pip installation",
]

[project.urls]
Homepage = "https://github.com/FABLOUSFALCON/zomato-restaurant-rating-prediction"
Repository = "https://github.com/FABLOUSFALCON/zomato-restaurant-rating-prediction"
Documentation = "https://github.com/FABLOUSFALCON/zomato-restaurant-rating-prediction#readme"


[tool.ruff]
line-length = 99
src = ["zomato_prediction"]
include = ["pyproject.toml", "zomato_prediction/**/*.py"]

[tool.ruff.lint]
extend-select = ["I"]  # Add import sorting

[tool.ruff.lint.isort]
known-first-party = ["zomato_prediction"]
force-sort-within-sections = true

[tool.pylsp.plugins]
ruff.enabled = true
black.enabled = true
isort.enabled = true
pycodestyle.enabled = false
flake8.enabled = false
pydocstyle.enabled = false
pyflakes.enabled = false
